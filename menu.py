# menu.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
import logging
import platform
import psutil
from datetime import timedelta
from state import bot_state




# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    keyboard = [
        [InlineKeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏", callback_data='manage_models')],
        [InlineKeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π", callback_data='manage_generation')],
        [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ", callback_data='system_info')],  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        [InlineKeyboardButton("–î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data='other_settings')]
    ]
    return InlineKeyboardMarkup(keyboard)


# –ü–æ–¥–º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª—è–º–∏
def manage_models_menu():
    keyboard = [
        [InlineKeyboardButton("–°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π", callback_data='list_models')],
        [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å", callback_data='choose_model')],
        [InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data='delete_model')],
        [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å", callback_data='create_model')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ü–æ–¥–º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏
def create_model_menu():
    keyboard = [
        [InlineKeyboardButton("–£–∫–∞–∑–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç", callback_data='set_prompt')],
        [InlineKeyboardButton("–ò—Å—Ö–æ–¥–Ω–∞—è –º–æ–¥–µ–ª—å", callback_data='base_model')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_manage_models')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ü–æ–¥–º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
def manage_generation_menu():
    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ–º–ø—Ç", callback_data='generation_prompt')],
        [InlineKeyboardButton("–•–∞—Ä–∞–∫—Ç–µ—Ä", callback_data='generation_character')],
        [InlineKeyboardButton("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", callback_data='generation_temperature')],  # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        [InlineKeyboardButton("–ü–æ—Ç–æ–∫–∏", callback_data='generation_threads')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    return InlineKeyboardMarkup(keyboard)


# –ü–æ–¥–º–µ–Ω—é –¥—Ä—É–≥–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
def other_settings_menu():
    keyboard = [
        [InlineKeyboardButton("–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —à—É—Ç–∫–∞–º–∏", callback_data='joke_interval')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ–Ω—é


async def handle_menu_navigation(update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    if query.data == 'system_info':
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        system_info = {
            "platform": platform.system(),
            "python_version": platform.python_version(),
            "cpu_usage": psutil.cpu_percent(),
            "cpu_count": psutil.cpu_count(logical=True),
            "disk_usage": psutil.disk_usage('/').percent,
            "memory_usage": psutil.virtual_memory().percent,
            "uptime": str(timedelta(seconds=int(psutil.boot_time())))
        }

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        status_message = (
            f"üñ• –°–∏—Å—Ç–µ–º–∞: {system_info['platform']}\n"
            f"üêç Python: {system_info['python_version']}\n"
            f"‚ö°Ô∏è CPU: {system_info['cpu_usage']}%\n"
            f"üíæ RAM: {system_info['memory_usage']}%\n"
            f"üíæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤: {system_info['cpu_count']}\n"
            f"üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: {system_info['disk_usage']}%\n"
            f"‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {system_info['uptime']}\n\n"
        )




        await query.edit_message_text(status_message)
        return


    if query.data == 'generation_temperature':
        current_temperature = bot_state.temperature
        await query.edit_message_text(
            f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É. –°–µ–π—á–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ {current_temperature}",
            reply_markup=choose_temperature_menu()
        )
        return

    elif query.data.startswith('set_temp_'):
        selected_temperature = float(query.data.split('_')[2])
        bot_state.temperature = selected_temperature
        logging.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ bot_state: {selected_temperature}")
        await query.edit_message_text(
            f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {selected_temperature}",
            reply_markup=manage_generation_menu()
        )
        return   
    if query.data == 'manage_models':
        await query.edit_message_text("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏:", reply_markup=manage_models_menu())
    elif query.data == 'manage_generation':
        await query.edit_message_text("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π:", reply_markup=manage_generation_menu())
    elif query.data == 'other_settings':
        await query.edit_message_text("–î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", reply_markup=other_settings_menu())
    elif query.data == 'list_models':
        await context.bot.send_message(query.message.chat_id, "–°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π...")  # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    elif query.data == 'choose_model':
        await context.bot.send_message(query.message.chat_id, "–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏...")  # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    elif query.data == 'delete_model':
        await context.bot.send_message(query.message.chat_id, "–£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏...")  # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    elif query.data == 'create_model':
        await query.edit_message_text("–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:", reply_markup=create_model_menu())
    elif query.data == 'back_to_main':
        await query.edit_message_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
    elif query.data == 'back_to_manage_models':
        await query.edit_message_text("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏:", reply_markup=manage_models_menu())
    else:
        await query.edit_message_text("–û–ø—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")



def choose_temperature_menu():
    keyboard = [
        [InlineKeyboardButton("0.2", callback_data='set_temp_0.2')],
        [InlineKeyboardButton("0.4", callback_data='set_temp_0.4')],
        [InlineKeyboardButton("0.6", callback_data='set_temp_0.6')],
        [InlineKeyboardButton("0.8", callback_data='set_temp_0.8')],
        [InlineKeyboardButton("1.0", callback_data='set_temp_1.0')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    return InlineKeyboardMarkup(keyboard)
    
    
    
